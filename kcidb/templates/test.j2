{# Test macros #}
{% import "misc.j2" as misc_macros %}

{% macro summary(test) %}
    {{- [test.path,
         none if test.comment is none else ('"' + test.comment + '"')] |
        reject("none") | join(" ") | default(test.id, true) -}}
{% endmacro %}

{% macro container_summary(container, max_list_len) %}
    {% if container.tests %}
        {{- "\nTESTS" }}
        {% set status_nodes = container.tests_root.status_nodes %}
        {{- "\n    Status" }}
            {{- "\n      " -}}
            {% for status, nodes in status_nodes.items() %}
                {% if nodes %}
                    {{- "  " + misc_macros.status_emoji(status) +
                        " " + (nodes | length | string) -}}
                {% endif %}
            {% endfor %}
            {{- "" }}
        {% set errored_nodes = status_nodes["ERROR"] %}
        {% if errored_nodes %}
            {{- "    Errors" }}
            {% for node in errored_nodes[:max_list_len] %}
                {{- "        " +
                    misc_macros.status_emoji(node.status) +
                    " " + (node.path | default("?", true))
                }}
            {% endfor %}
            {% if (errored_nodes | length) > max_list_len %}
                {{- "        ..." }}
            {% endif %}
        {% endif %}
        {% set failed_nodes = status_nodes["FAIL"] %}
        {% if failed_nodes %}
            {{- "    Failures" }}
            {% for node in failed_nodes[:max_list_len] %}
                {{- "        " +
                    misc_macros.status_emoji(node.status) +
                    " " + (node.path | default("?", true))
                }}
            {% endfor %}
            {% if (failed_nodes | length) > max_list_len %}
                {{- "        ..." }}
            {% endif %}
        {% endif %}
        {{- "    By\n        " -}}
            {{- container.tests | map(attribute="origin") |
                unique | sort | join(", ") }}
    {% endif %}
{% endmacro %}
